#!/bin/bash

# Nome do bucket público
PUBLIC_BUCKET="nome-do-bucket-publico"

# Nome do bucket privado
PRIVATE_BUCKET="nome-do-bucket-privado"

# Nome do perfil AWS
AWS_PROFILE="nome-do-perfil"

# Diretório temporário
TEMP_DIR="./temp-dir"

# Cria o diretório temporário se ele não existir
mkdir -p $TEMP_DIR

# Copia os arquivos do bucket público para o diretório temporário
aws s3 cp s3://$PUBLIC_BUCKET/ $TEMP_DIR --recursive --no-sign-request

# Verifica se a cópia foi bem-sucedida
if [ $? -eq 0 ]; then
  echo "Arquivos copiados com sucesso para o diretório temporário."
else
  echo "Falha ao copiar arquivos para o diretório temporário."
  exit 1
fi

# Copia os arquivos do diretório temporário para o bucket privado na pasta 'upload'
aws s3 cp $TEMP_DIR/ s3://$PRIVATE_BUCKET/upload/ --recursive --profile $AWS_PROFILE

# Verifica se o upload foi bem-sucedido
if [ $? -eq 0 ]; then
  echo "Arquivos enviados com sucesso para o bucket privado."
else
  echo "Falha ao enviar arquivos para o bucket privado."
  exit 1
fi

# Remove o diretório temporário
rm -rf $TEMP_DIR

# Verifica se a remoção foi bem-sucedida
if [ $? -eq 0 ]; then
  echo "Diretório temporário removido com sucesso."
else
  echo "Falha ao remover o diretório temporário."
  exit 1
fi

echo "Script concluído."
#######

FROM python:3.11-bookworm


RUN mkdir /app
WORKDIR /app

# RUN poetry install
RUN pip install poetry --trusted-host pypi.org --trusted-host files.pythonhosted.org
COPY pyproject.toml ./
RUN poetry export -f requirements.txt --output requirements.txt --without-hashes
RUN pip3.11 install -r requirements.txt --target . --trusted-host pypi.org --trusted-host files.pythonhosted.org
RUN pip3.11 install gunicorn --trusted-host pypi.org --trusted-host files.pythonhosted.org

ADD . /app
EXPOSE 5000
ENTRYPOINT ["gunicorn", "--config", "gunicorn_config.py", "app.wsgi:app"]
